// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Landscape_Auto
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// LandscapeCheckDocs - Use 'LandscapeCheckDocsParams' to pass parameters into this method.
        /// </summary>
        public void LandscapeCheckDocs()
        {
            #region Variable Declarations
            WinButton uICustomersButton = this.UICILandscapeWindow.UIItemButton.UICustomersButton;
            WinButton uISearchButton = this.UICILandscapeWindow.UICustomersButton.UISearchButton;
            WinEdit uITxtQuoteNoEdit = this.UICILandscapeWindow.UIFrmClientWindow.UITxtQuoteNoWindow.UITxtQuoteNoEdit;
            WinButton uISearchButton1 = this.UICILandscapeWindow.UIFrmClientWindow.UISearchWindow.UISearchButton;
            WinListItem uIPrivateCarListItem = this.UICustomerMrAaaaaTwfsuWindow.UILvwPoliciesWindow.UIPrivateCarListItem;
            WinMenuItem uIDocumentStoreMenuItem = this.UIPrivateCarPolicyS318Window.UIPolicyMenuBar.UIDocumentsMenuItem.UIDocumentStoreMenuItem;
            WinCell uIYourCarInsurancePoliCell = this.UIDocumentStoreWindow.UIDataGridViewUploadWindow.UIDataGridViewTable.UIRow0Row.UIYourCarInsurancePoliCell;
            WinCell uIStatementofFactCell = this.UIDocumentStoreWindow.UIDataGridViewUploadWindow.UIDataGridViewTable.UIRow1Row.UIStatementofFactCell;
            WinCell uICarInsuranceIPIDCell = this.UIDocumentStoreWindow.UIDataGridViewUploadWindow.UIDataGridViewTable.UIRow2Row.UICarInsuranceIPIDCell;
            WinCell uICertificateofMotorInCell = this.UIDocumentStoreWindow.UIDataGridViewUploadWindow.UIDataGridViewTable.UIRow3Row.UICertificateofMotorInCell;
            WinCell uIAboutOurInsuranceSerCell = this.UIDocumentStoreWindow.UIDataGridViewUploadWindow.UIDataGridViewTable.UIRow4Row.UIAboutOurInsuranceSerCell;
            WinCell uIScheduleCell = this.UIDocumentStoreWindow.UIDataGridViewUploadWindow.UIDataGridViewTable.UIRow5Row.UIScheduleCell;
            WinCell uICoverLetterCell = this.UIDocumentStoreWindow.UIDataGridViewUploadWindow.UIDataGridViewTable.UIRow6Row.UICoverLetterCell;
            WinButton uICloseButton = this.UIDocumentViewerYourCaWindow.UIDocumentViewerYourCaTitleBar.UICloseButton;
            WinButton uICloseButton1 = this.UIDocumentViewerStatemWindow.UIDocumentViewerStatemTitleBar.UICloseButton;
            WinButton uICloseButton2 = this.UIDocumentViewerCarInsWindow.UIDocumentViewerCarInsTitleBar.UICloseButton;
            WinButton uICloseButton3 = this.UIDocumentViewerCertifWindow.UIDocumentViewerCertifTitleBar.UICloseButton;
            WinButton uICloseButton4 = this.UIDocumentViewerAboutOWindow.UIDocumentViewerAboutOTitleBar.UICloseButton;
            WinButton uICloseButton5 = this.UIDocumentViewerScheduWindow.UIDocumentViewerScheduTitleBar.UICloseButton;
            WinButton uICloseButton6 = this.UIDocumentViewerCoverLWindow.UIDocumentViewerCoverLTitleBar.UICloseButton;
            WinButton uICloseButton7 = this.UIDocumentStoreWindow.UIDocumentStoreTitleBar.UICloseButton;
            WinButton uICloseButton8 = this.UIPrivateCarPolicyS318Window.UIPrivateCarPolicyS318TitleBar.UICloseButton;
            WinButton uICloseButton9 = this.UICustomerMrAaaaaTwfsuWindow.UICustomerMrAaaaaTwfsuTitleBar.UICloseButton;
            WinClient uICtlClientSearchClient = this.UICILandscapeWindow.UIFrmClientWindow.UICtlClientSearchWindow.UICtlClientSearchClient;
            WinButton uICloseButton10 = this.UICILandscapeWindow.UICILandscapeTitleBar.UICloseButton;
            WinButton uIYesButton = this.UICILandscapeWindow1.UIYesWindow.UIYesButton;
            #endregion

            // Launch '\\itliv-nas03\development team\BuildTC\Landscape-Direct-Develop\20180921.707\Release\_GeneratedClient\Landscape.Client\sit\uiMain.exe'
            ApplicationUnderTest uICILandscapeWindow = ApplicationUnderTest.Launch(this.LandscapeCheckDocsParams.UICILandscapeWindowExePath);
                //, this.LandscapeCheckDocsParams.UICILandscapeWindowAlternateExePath);

            // The recording for the application under test '\\itliv-nas03\development team\BuildTC\Landscape-Direct-Develop\20180921.707\Release\_GeneratedClient\Landscape.Client\sit\uiMain.exe' may not be correct as it is located on a network share. Please install the application on a local path.
            Playback.Wait(1000);
            // Click 'Customers' button
            Mouse.Click(uICustomersButton, new Point(25, 10));

            // Click 'Search' button
            Mouse.Click(uISearchButton, new Point(51, 21));

            // Type 'S3/18268/000WG' in 'txtQuoteNo' text box
            uITxtQuoteNoEdit.Text = this.LandscapeCheckDocsParams.UITxtQuoteNoEditText;

            // Click '&Search' button
            Mouse.Click(uISearchButton1, new Point(12, 4));

            // Double-Click 'Private Car' list item
            Mouse.DoubleClick(uIPrivateCarListItem, new Point(92, 7));

            // Click 'Documents' -> 'Document Store' menu item
            Mouse.Click(uIDocumentStoreMenuItem, new Point(52, 8));

            // Click 'Your Car Insurance Policy' cell
            Mouse.Click(uIYourCarInsurancePoliCell, new Point(181, 9));

            // Click 'Statement of Fact' cell
            Mouse.Click(uIStatementofFactCell, new Point(88, 12));

            // Click 'Car Insurance IPID' cell
            Mouse.Click(uICarInsuranceIPIDCell, new Point(100, 9));

            // Click 'Certificate of Motor Insurance' cell
            Mouse.Click(uICertificateofMotorInCell, new Point(103, 9));

            // Click 'About Our Insurance Services' cell
            Mouse.Click(uIAboutOurInsuranceSerCell, new Point(111, 10));

            // Click 'Schedule' cell
            Mouse.Click(uIScheduleCell, new Point(114, 13));

            // Click 'Cover Letter' cell
            Mouse.Click(uICoverLetterCell, new Point(108, 14));

            // Double-Click 'Your Car Insurance Policy' cell
            Mouse.DoubleClick(uIYourCarInsurancePoliCell, new Point(85, 14));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(33, 7));

            // Double-Click 'Statement of Fact' cell
            Mouse.DoubleClick(uIStatementofFactCell, new Point(67, 10));

            // Click 'Close' button
            Mouse.Click(uICloseButton1, new Point(33, 9));

            // Double-Click 'Car Insurance IPID' cell
            Mouse.DoubleClick(uICarInsuranceIPIDCell, new Point(60, 5));

            // Click 'Close' button
            Mouse.Click(uICloseButton2, new Point(21, 10));

            // Double-Click 'Certificate of Motor Insurance' cell
            Mouse.DoubleClick(uICertificateofMotorInCell, new Point(41, 10));

            // Click 'Close' button
            Mouse.Click(uICloseButton3, new Point(21, 17));

            // Double-Click 'About Our Insurance Services' cell
            Mouse.DoubleClick(uIAboutOurInsuranceSerCell, new Point(70, 11));

            // Click 'Close' button
            Mouse.Click(uICloseButton4, new Point(22, 11));

            // Double-Click 'Schedule' cell
            Mouse.DoubleClick(uIScheduleCell, new Point(58, 5));

            // Click 'Close' button
            Mouse.Click(uICloseButton5, new Point(31, 11));

            // Double-Click 'Cover Letter' cell
            Mouse.DoubleClick(uICoverLetterCell, new Point(56, 6));

            // Click 'Close' button
            Mouse.Click(uICloseButton6, new Point(20, 16));

            // Click 'Close' button
            Mouse.Click(uICloseButton7, new Point(24, 4));

            // Click 'Close' button
            Mouse.Click(uICloseButton8, new Point(22, 8));

            // Click 'Close' button
            Mouse.Click(uICloseButton9, new Point(23, 7));

            // Click 'ctlClientSearch' client
            Mouse.Click(uICtlClientSearchClient, new Point(1177, 77));

            // Click 'Close' button
            Mouse.Click(uICloseButton10, new Point(15, 9));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(36, 15));
        }
        
        #region Properties
        public virtual LandscapeCheckDocsParams LandscapeCheckDocsParams
        {
            get
            {
                if ((this.mLandscapeCheckDocsParams == null))
                {
                    this.mLandscapeCheckDocsParams = new LandscapeCheckDocsParams();
                }
                return this.mLandscapeCheckDocsParams;
            }
        }
        
        public UICILandscapeWindow UICILandscapeWindow
        {
            get
            {
                if ((this.mUICILandscapeWindow == null))
                {
                    this.mUICILandscapeWindow = new UICILandscapeWindow();
                }
                return this.mUICILandscapeWindow;
            }
        }
        
        public UICustomerMrAaaaaTwfsuWindow UICustomerMrAaaaaTwfsuWindow
        {
            get
            {
                if ((this.mUICustomerMrAaaaaTwfsuWindow == null))
                {
                    this.mUICustomerMrAaaaaTwfsuWindow = new UICustomerMrAaaaaTwfsuWindow();
                }
                return this.mUICustomerMrAaaaaTwfsuWindow;
            }
        }
        
        public UIPrivateCarPolicyS318Window UIPrivateCarPolicyS318Window
        {
            get
            {
                if ((this.mUIPrivateCarPolicyS318Window == null))
                {
                    this.mUIPrivateCarPolicyS318Window = new UIPrivateCarPolicyS318Window();
                }
                return this.mUIPrivateCarPolicyS318Window;
            }
        }
        
        public UIDocumentStoreWindow UIDocumentStoreWindow
        {
            get
            {
                if ((this.mUIDocumentStoreWindow == null))
                {
                    this.mUIDocumentStoreWindow = new UIDocumentStoreWindow();
                }
                return this.mUIDocumentStoreWindow;
            }
        }
        
        public UIDocumentViewerYourCaWindow UIDocumentViewerYourCaWindow
        {
            get
            {
                if ((this.mUIDocumentViewerYourCaWindow == null))
                {
                    this.mUIDocumentViewerYourCaWindow = new UIDocumentViewerYourCaWindow();
                }
                return this.mUIDocumentViewerYourCaWindow;
            }
        }
        
        public UIDocumentViewerStatemWindow UIDocumentViewerStatemWindow
        {
            get
            {
                if ((this.mUIDocumentViewerStatemWindow == null))
                {
                    this.mUIDocumentViewerStatemWindow = new UIDocumentViewerStatemWindow();
                }
                return this.mUIDocumentViewerStatemWindow;
            }
        }
        
        public UIDocumentViewerCarInsWindow UIDocumentViewerCarInsWindow
        {
            get
            {
                if ((this.mUIDocumentViewerCarInsWindow == null))
                {
                    this.mUIDocumentViewerCarInsWindow = new UIDocumentViewerCarInsWindow();
                }
                return this.mUIDocumentViewerCarInsWindow;
            }
        }
        
        public UIDocumentViewerCertifWindow UIDocumentViewerCertifWindow
        {
            get
            {
                if ((this.mUIDocumentViewerCertifWindow == null))
                {
                    this.mUIDocumentViewerCertifWindow = new UIDocumentViewerCertifWindow();
                }
                return this.mUIDocumentViewerCertifWindow;
            }
        }
        
        public UIDocumentViewerAboutOWindow UIDocumentViewerAboutOWindow
        {
            get
            {
                if ((this.mUIDocumentViewerAboutOWindow == null))
                {
                    this.mUIDocumentViewerAboutOWindow = new UIDocumentViewerAboutOWindow();
                }
                return this.mUIDocumentViewerAboutOWindow;
            }
        }
        
        public UIDocumentViewerScheduWindow UIDocumentViewerScheduWindow
        {
            get
            {
                if ((this.mUIDocumentViewerScheduWindow == null))
                {
                    this.mUIDocumentViewerScheduWindow = new UIDocumentViewerScheduWindow();
                }
                return this.mUIDocumentViewerScheduWindow;
            }
        }
        
        public UIDocumentViewerCoverLWindow UIDocumentViewerCoverLWindow
        {
            get
            {
                if ((this.mUIDocumentViewerCoverLWindow == null))
                {
                    this.mUIDocumentViewerCoverLWindow = new UIDocumentViewerCoverLWindow();
                }
                return this.mUIDocumentViewerCoverLWindow;
            }
        }
        
        public UICILandscapeWindow1 UICILandscapeWindow1
        {
            get
            {
                if ((this.mUICILandscapeWindow1 == null))
                {
                    this.mUICILandscapeWindow1 = new UICILandscapeWindow1();
                }
                return this.mUICILandscapeWindow1;
            }
        }
        #endregion
        
        #region Fields
        private LandscapeCheckDocsParams mLandscapeCheckDocsParams;
        
        private UICILandscapeWindow mUICILandscapeWindow;
        
        private UICustomerMrAaaaaTwfsuWindow mUICustomerMrAaaaaTwfsuWindow;
        
        private UIPrivateCarPolicyS318Window mUIPrivateCarPolicyS318Window;
        
        private UIDocumentStoreWindow mUIDocumentStoreWindow;
        
        private UIDocumentViewerYourCaWindow mUIDocumentViewerYourCaWindow;
        
        private UIDocumentViewerStatemWindow mUIDocumentViewerStatemWindow;
        
        private UIDocumentViewerCarInsWindow mUIDocumentViewerCarInsWindow;
        
        private UIDocumentViewerCertifWindow mUIDocumentViewerCertifWindow;
        
        private UIDocumentViewerAboutOWindow mUIDocumentViewerAboutOWindow;
        
        private UIDocumentViewerScheduWindow mUIDocumentViewerScheduWindow;
        
        private UIDocumentViewerCoverLWindow mUIDocumentViewerCoverLWindow;
        
        private UICILandscapeWindow1 mUICILandscapeWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LandscapeCheckDocs'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LandscapeCheckDocsParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '\\itliv-nas03\development team\BuildTC\Landscape-Direct-Develop\20180921.707\Release\_GeneratedClient\Landscape.Client\sit\uiMain.exe'
        /// </summary>
        public string UICILandscapeWindowExePath = "\\\\itliv-nas03\\development team\\BuildTC\\Landscape-Direct-Develop\\20181001.722\\Rele" +
            "ase\\_GeneratedClient\\Landscape.Client\\sit\\uiMain.exe";
        
        /// <summary>
        /// Launch '\\itliv-nas03\development team\BuildTC\Landscape-Direct-Develop\20180921.707\Release\_GeneratedClient\Landscape.Client\sit\uiMain.exe'
        /// </summary>
        public string UICILandscapeWindowAlternateExePath = "\\\\itliv-nas03\\development team\\BuildTC\\Landscape-Direct-Develop\\20181001.722\\Rele" +
            "ase\\_GeneratedClient\\Landscape.Client\\sit\\uiMain.exe";
        
        /// <summary>
        /// Type 'S3/18268/000WG' in 'txtQuoteNo' text box
        /// </summary>
        public string UITxtQuoteNoEditText = "S3/18268/000WG";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICILandscapeWindow : WinWindow
    {
        
        public UICILandscapeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "CI Landscape";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("CI Landscape");
            #endregion
        }
        
        #region Properties
        public UIItemButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new UIItemButton(this);
                }
                return this.mUIItemButton;
            }
        }
        
        public UICustomersButton UICustomersButton
        {
            get
            {
                if ((this.mUICustomersButton == null))
                {
                    this.mUICustomersButton = new UICustomersButton(this);
                }
                return this.mUICustomersButton;
            }
        }
        
        public UIFrmClientWindow UIFrmClientWindow
        {
            get
            {
                if ((this.mUIFrmClientWindow == null))
                {
                    this.mUIFrmClientWindow = new UIFrmClientWindow(this);
                }
                return this.mUIFrmClientWindow;
            }
        }
        
        public UICILandscapeTitleBar UICILandscapeTitleBar
        {
            get
            {
                if ((this.mUICILandscapeTitleBar == null))
                {
                    this.mUICILandscapeTitleBar = new UICILandscapeTitleBar(this);
                }
                return this.mUICILandscapeTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemButton mUIItemButton;
        
        private UICustomersButton mUICustomersButton;
        
        private UIFrmClientWindow mUIFrmClientWindow;
        
        private UICILandscapeTitleBar mUICILandscapeTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemButton : WinButton
    {
        
        public UIItemButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("CI Landscape");
            #endregion
        }
        
        #region Properties
        public WinButton UICustomersButton
        {
            get
            {
                if ((this.mUICustomersButton == null))
                {
                    this.mUICustomersButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICustomersButton.SearchProperties[WinButton.PropertyNames.Name] = "Customers";
                    this.mUICustomersButton.WindowTitles.Add("CI Landscape");
                    #endregion
                }
                return this.mUICustomersButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICustomersButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICustomersButton : WinButton
    {
        
        public UICustomersButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinButton.PropertyNames.Name] = "Customers";
            this.WindowTitles.Add("CI Landscape");
            #endregion
        }
        
        #region Properties
        public WinButton UISearchButton
        {
            get
            {
                if ((this.mUISearchButton == null))
                {
                    this.mUISearchButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISearchButton.SearchProperties[WinButton.PropertyNames.Name] = "Search";
                    this.mUISearchButton.WindowTitles.Add("CI Landscape");
                    #endregion
                }
                return this.mUISearchButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISearchButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFrmClientWindow : WinWindow
    {
        
        public UIFrmClientWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "frmClient";
            this.WindowTitles.Add("CI Landscape");
            #endregion
        }
        
        #region Properties
        public UITxtQuoteNoWindow UITxtQuoteNoWindow
        {
            get
            {
                if ((this.mUITxtQuoteNoWindow == null))
                {
                    this.mUITxtQuoteNoWindow = new UITxtQuoteNoWindow(this);
                }
                return this.mUITxtQuoteNoWindow;
            }
        }
        
        public UISearchWindow UISearchWindow
        {
            get
            {
                if ((this.mUISearchWindow == null))
                {
                    this.mUISearchWindow = new UISearchWindow(this);
                }
                return this.mUISearchWindow;
            }
        }
        
        public UICtlClientSearchWindow UICtlClientSearchWindow
        {
            get
            {
                if ((this.mUICtlClientSearchWindow == null))
                {
                    this.mUICtlClientSearchWindow = new UICtlClientSearchWindow(this);
                }
                return this.mUICtlClientSearchWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtQuoteNoWindow mUITxtQuoteNoWindow;
        
        private UISearchWindow mUISearchWindow;
        
        private UICtlClientSearchWindow mUICtlClientSearchWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITxtQuoteNoWindow : WinWindow
    {
        
        public UITxtQuoteNoWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtQuoteNo";
            this.WindowTitles.Add("CI Landscape");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtQuoteNoEdit
        {
            get
            {
                if ((this.mUITxtQuoteNoEdit == null))
                {
                    this.mUITxtQuoteNoEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtQuoteNoEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Policy Number";
                    this.mUITxtQuoteNoEdit.WindowTitles.Add("CI Landscape");
                    #endregion
                }
                return this.mUITxtQuoteNoEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtQuoteNoEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISearchWindow : WinWindow
    {
        
        public UISearchWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cmdSearch";
            this.WindowTitles.Add("CI Landscape");
            #endregion
        }
        
        #region Properties
        public WinButton UISearchButton
        {
            get
            {
                if ((this.mUISearchButton == null))
                {
                    this.mUISearchButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISearchButton.SearchProperties[WinButton.PropertyNames.Name] = "Search";
                    this.mUISearchButton.WindowTitles.Add("CI Landscape");
                    #endregion
                }
                return this.mUISearchButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISearchButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICtlClientSearchWindow : WinWindow
    {
        
        public UICtlClientSearchWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ctlClientSearch";
            this.WindowTitles.Add("CI Landscape");
            #endregion
        }
        
        #region Properties
        public WinClient UICtlClientSearchClient
        {
            get
            {
                if ((this.mUICtlClientSearchClient == null))
                {
                    this.mUICtlClientSearchClient = new WinClient(this);
                    #region Search Criteria
                    this.mUICtlClientSearchClient.WindowTitles.Add("CI Landscape");
                    #endregion
                }
                return this.mUICtlClientSearchClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUICtlClientSearchClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICILandscapeTitleBar : WinTitleBar
    {
        
        public UICILandscapeTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("CI Landscape");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("CI Landscape");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICustomerMrAaaaaTwfsuWindow : WinWindow
    {
        
        public UICustomerMrAaaaaTwfsuWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Customer - Mr Aaaaa  Twfsuchll";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Customer - Mr Aaaaa  Twfsuchll");
            #endregion
        }
        
        #region Properties
        public UILvwPoliciesWindow UILvwPoliciesWindow
        {
            get
            {
                if ((this.mUILvwPoliciesWindow == null))
                {
                    this.mUILvwPoliciesWindow = new UILvwPoliciesWindow(this);
                }
                return this.mUILvwPoliciesWindow;
            }
        }
        
        public UICustomerMrAaaaaTwfsuTitleBar UICustomerMrAaaaaTwfsuTitleBar
        {
            get
            {
                if ((this.mUICustomerMrAaaaaTwfsuTitleBar == null))
                {
                    this.mUICustomerMrAaaaaTwfsuTitleBar = new UICustomerMrAaaaaTwfsuTitleBar(this);
                }
                return this.mUICustomerMrAaaaaTwfsuTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UILvwPoliciesWindow mUILvwPoliciesWindow;
        
        private UICustomerMrAaaaaTwfsuTitleBar mUICustomerMrAaaaaTwfsuTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILvwPoliciesWindow : WinWindow
    {
        
        public UILvwPoliciesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lvwPolicies";
            this.WindowTitles.Add("Customer - Mr Aaaaa  Twfsuchll");
            #endregion
        }
        
        #region Properties
        public WinListItem UIPrivateCarListItem
        {
            get
            {
                if ((this.mUIPrivateCarListItem == null))
                {
                    this.mUIPrivateCarListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIPrivateCarListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Private Car";
                    this.mUIPrivateCarListItem.WindowTitles.Add("Customer - Mr Aaaaa  Twfsuchll");
                    #endregion
                }
                return this.mUIPrivateCarListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIPrivateCarListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICustomerMrAaaaaTwfsuTitleBar : WinTitleBar
    {
        
        public UICustomerMrAaaaaTwfsuTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Customer - Mr Aaaaa  Twfsuchll");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Customer - Mr Aaaaa  Twfsuchll");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPrivateCarPolicyS318Window : WinWindow
    {
        
        public UIPrivateCarPolicyS318Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Private Car Policy - S3/18268/000WG : (Web Quote ID - S3/18268/000WG)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Private Car Policy - S3/18268/000WG : (Web Quote ID - S3/18268/000WG)");
            #endregion
        }
        
        #region Properties
        public UIPolicyMenuBar UIPolicyMenuBar
        {
            get
            {
                if ((this.mUIPolicyMenuBar == null))
                {
                    this.mUIPolicyMenuBar = new UIPolicyMenuBar(this);
                }
                return this.mUIPolicyMenuBar;
            }
        }
        
        public UIPrivateCarPolicyS318TitleBar UIPrivateCarPolicyS318TitleBar
        {
            get
            {
                if ((this.mUIPrivateCarPolicyS318TitleBar == null))
                {
                    this.mUIPrivateCarPolicyS318TitleBar = new UIPrivateCarPolicyS318TitleBar(this);
                }
                return this.mUIPrivateCarPolicyS318TitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIPolicyMenuBar mUIPolicyMenuBar;
        
        private UIPrivateCarPolicyS318TitleBar mUIPrivateCarPolicyS318TitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPolicyMenuBar : WinMenuBar
    {
        
        public UIPolicyMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "DotNetBar Bar";
            this.WindowTitles.Add("Private Car Policy - S3/18268/000WG : (Web Quote ID - S3/18268/000WG)");
            #endregion
        }
        
        #region Properties
        public UIDocumentsMenuItem UIDocumentsMenuItem
        {
            get
            {
                if ((this.mUIDocumentsMenuItem == null))
                {
                    this.mUIDocumentsMenuItem = new UIDocumentsMenuItem(this);
                }
                return this.mUIDocumentsMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentsMenuItem mUIDocumentsMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentsMenuItem : WinMenuItem
    {
        
        public UIDocumentsMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Documents";
            this.WindowTitles.Add("Private Car Policy - S3/18268/000WG : (Web Quote ID - S3/18268/000WG)");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIDocumentStoreMenuItem
        {
            get
            {
                if ((this.mUIDocumentStoreMenuItem == null))
                {
                    this.mUIDocumentStoreMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIDocumentStoreMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Document Store";
                    this.mUIDocumentStoreMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIDocumentStoreMenuItem.WindowTitles.Add("Private Car Policy - S3/18268/000WG : (Web Quote ID - S3/18268/000WG)");
                    #endregion
                }
                return this.mUIDocumentStoreMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIDocumentStoreMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPrivateCarPolicyS318TitleBar : WinTitleBar
    {
        
        public UIPrivateCarPolicyS318TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Private Car Policy - S3/18268/000WG : (Web Quote ID - S3/18268/000WG)");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Private Car Policy - S3/18268/000WG : (Web Quote ID - S3/18268/000WG)");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentStoreWindow : WinWindow
    {
        
        public UIDocumentStoreWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Document Store";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Document Store");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewUploadWindow UIDataGridViewUploadWindow
        {
            get
            {
                if ((this.mUIDataGridViewUploadWindow == null))
                {
                    this.mUIDataGridViewUploadWindow = new UIDataGridViewUploadWindow(this);
                }
                return this.mUIDataGridViewUploadWindow;
            }
        }
        
        public UIDocumentStoreTitleBar UIDocumentStoreTitleBar
        {
            get
            {
                if ((this.mUIDocumentStoreTitleBar == null))
                {
                    this.mUIDocumentStoreTitleBar = new UIDocumentStoreTitleBar(this);
                }
                return this.mUIDocumentStoreTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewUploadWindow mUIDataGridViewUploadWindow;
        
        private UIDocumentStoreTitleBar mUIDocumentStoreTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDataGridViewUploadWindow : WinWindow
    {
        
        public UIDataGridViewUploadWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dataGridViewUpload";
            this.WindowTitles.Add("Document Store");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Document Store");
            #endregion
        }
        
        #region Properties
        public UIRow0Row UIRow0Row
        {
            get
            {
                if ((this.mUIRow0Row == null))
                {
                    this.mUIRow0Row = new UIRow0Row(this);
                }
                return this.mUIRow0Row;
            }
        }
        
        public UIRow1Row UIRow1Row
        {
            get
            {
                if ((this.mUIRow1Row == null))
                {
                    this.mUIRow1Row = new UIRow1Row(this);
                }
                return this.mUIRow1Row;
            }
        }
        
        public UIRow2Row UIRow2Row
        {
            get
            {
                if ((this.mUIRow2Row == null))
                {
                    this.mUIRow2Row = new UIRow2Row(this);
                }
                return this.mUIRow2Row;
            }
        }
        
        public UIRow3Row UIRow3Row
        {
            get
            {
                if ((this.mUIRow3Row == null))
                {
                    this.mUIRow3Row = new UIRow3Row(this);
                }
                return this.mUIRow3Row;
            }
        }
        
        public UIRow4Row UIRow4Row
        {
            get
            {
                if ((this.mUIRow4Row == null))
                {
                    this.mUIRow4Row = new UIRow4Row(this);
                }
                return this.mUIRow4Row;
            }
        }
        
        public UIRow5Row UIRow5Row
        {
            get
            {
                if ((this.mUIRow5Row == null))
                {
                    this.mUIRow5Row = new UIRow5Row(this);
                }
                return this.mUIRow5Row;
            }
        }
        
        public UIRow6Row UIRow6Row
        {
            get
            {
                if ((this.mUIRow6Row == null))
                {
                    this.mUIRow6Row = new UIRow6Row(this);
                }
                return this.mUIRow6Row;
            }
        }
        #endregion
        
        #region Fields
        private UIRow0Row mUIRow0Row;
        
        private UIRow1Row mUIRow1Row;
        
        private UIRow2Row mUIRow2Row;
        
        private UIRow3Row mUIRow3Row;
        
        private UIRow4Row mUIRow4Row;
        
        private UIRow5Row mUIRow5Row;
        
        private UIRow6Row mUIRow6Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRow0Row : WinRow
    {
        
        public UIRow0Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Value] = "Unknown;Your Car Insurance Policy;0;25/09/2018 13:43";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Document Store");
            #endregion
        }
        
        #region Properties
        public WinCell UIYourCarInsurancePoliCell
        {
            get
            {
                if ((this.mUIYourCarInsurancePoliCell == null))
                {
                    this.mUIYourCarInsurancePoliCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIYourCarInsurancePoliCell.SearchProperties[WinCell.PropertyNames.Value] = "Your Car Insurance Policy";
                    this.mUIYourCarInsurancePoliCell.WindowTitles.Add("Document Store");
                    #endregion
                }
                return this.mUIYourCarInsurancePoliCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIYourCarInsurancePoliCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRow1Row : WinRow
    {
        
        public UIRow1Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Value] = "Unknown;Statement of Fact;0;25/09/2018 13:43";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Document Store");
            #endregion
        }
        
        #region Properties
        public WinCell UIStatementofFactCell
        {
            get
            {
                if ((this.mUIStatementofFactCell == null))
                {
                    this.mUIStatementofFactCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIStatementofFactCell.SearchProperties[WinCell.PropertyNames.Value] = "Statement of Fact";
                    this.mUIStatementofFactCell.WindowTitles.Add("Document Store");
                    #endregion
                }
                return this.mUIStatementofFactCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIStatementofFactCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRow2Row : WinRow
    {
        
        public UIRow2Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Value] = "Unknown;Car Insurance IPID;0;25/09/2018 13:43";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Document Store");
            #endregion
        }
        
        #region Properties
        public WinCell UICarInsuranceIPIDCell
        {
            get
            {
                if ((this.mUICarInsuranceIPIDCell == null))
                {
                    this.mUICarInsuranceIPIDCell = new WinCell(this);
                    #region Search Criteria
                    this.mUICarInsuranceIPIDCell.SearchProperties[WinCell.PropertyNames.Value] = "Car Insurance IPID";
                    this.mUICarInsuranceIPIDCell.WindowTitles.Add("Document Store");
                    #endregion
                }
                return this.mUICarInsuranceIPIDCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUICarInsuranceIPIDCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRow3Row : WinRow
    {
        
        public UIRow3Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Value] = "Unknown;Certificate of Motor Insurance;0;25/09/2018 13:43";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Document Store");
            #endregion
        }
        
        #region Properties
        public WinCell UICertificateofMotorInCell
        {
            get
            {
                if ((this.mUICertificateofMotorInCell == null))
                {
                    this.mUICertificateofMotorInCell = new WinCell(this);
                    #region Search Criteria
                    this.mUICertificateofMotorInCell.SearchProperties[WinCell.PropertyNames.Value] = "Certificate of Motor Insurance";
                    this.mUICertificateofMotorInCell.WindowTitles.Add("Document Store");
                    #endregion
                }
                return this.mUICertificateofMotorInCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUICertificateofMotorInCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRow4Row : WinRow
    {
        
        public UIRow4Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Value] = "Unknown;About Our Insurance Services;0;25/09/2018 13:43";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Document Store");
            #endregion
        }
        
        #region Properties
        public WinCell UIAboutOurInsuranceSerCell
        {
            get
            {
                if ((this.mUIAboutOurInsuranceSerCell == null))
                {
                    this.mUIAboutOurInsuranceSerCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAboutOurInsuranceSerCell.SearchProperties[WinCell.PropertyNames.Value] = "About Our Insurance Services";
                    this.mUIAboutOurInsuranceSerCell.WindowTitles.Add("Document Store");
                    #endregion
                }
                return this.mUIAboutOurInsuranceSerCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAboutOurInsuranceSerCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRow5Row : WinRow
    {
        
        public UIRow5Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Value] = "Unknown;Schedule;0;25/09/2018 13:43";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Document Store");
            #endregion
        }
        
        #region Properties
        public WinCell UIScheduleCell
        {
            get
            {
                if ((this.mUIScheduleCell == null))
                {
                    this.mUIScheduleCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIScheduleCell.SearchProperties[WinCell.PropertyNames.Value] = "Schedule";
                    this.mUIScheduleCell.WindowTitles.Add("Document Store");
                    #endregion
                }
                return this.mUIScheduleCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIScheduleCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRow6Row : WinRow
    {
        
        public UIRow6Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Value] = "Unknown;Cover Letter;0;25/09/2018 13:43";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Document Store");
            #endregion
        }
        
        #region Properties
        public WinCell UICoverLetterCell
        {
            get
            {
                if ((this.mUICoverLetterCell == null))
                {
                    this.mUICoverLetterCell = new WinCell(this);
                    #region Search Criteria
                    this.mUICoverLetterCell.SearchProperties[WinCell.PropertyNames.Value] = "Cover Letter";
                    this.mUICoverLetterCell.WindowTitles.Add("Document Store");
                    #endregion
                }
                return this.mUICoverLetterCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUICoverLetterCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentStoreTitleBar : WinTitleBar
    {
        
        public UIDocumentStoreTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Document Store");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Document Store");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerYourCaWindow : WinWindow
    {
        
        public UIDocumentViewerYourCaWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Document Viewer: Your Car Insurance Policy (Unknown)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Document Viewer: Your Car Insurance Policy (Unknown)");
            #endregion
        }
        
        #region Properties
        public UIDocumentViewerYourCaTitleBar UIDocumentViewerYourCaTitleBar
        {
            get
            {
                if ((this.mUIDocumentViewerYourCaTitleBar == null))
                {
                    this.mUIDocumentViewerYourCaTitleBar = new UIDocumentViewerYourCaTitleBar(this);
                }
                return this.mUIDocumentViewerYourCaTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentViewerYourCaTitleBar mUIDocumentViewerYourCaTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerYourCaTitleBar : WinTitleBar
    {
        
        public UIDocumentViewerYourCaTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Document Viewer: Your Car Insurance Policy (Unknown)");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Document Viewer: Your Car Insurance Policy (Unknown)");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerStatemWindow : WinWindow
    {
        
        public UIDocumentViewerStatemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Document Viewer: Statement of Fact (Unknown)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Document Viewer: Statement of Fact (Unknown)");
            #endregion
        }
        
        #region Properties
        public UIDocumentViewerStatemTitleBar UIDocumentViewerStatemTitleBar
        {
            get
            {
                if ((this.mUIDocumentViewerStatemTitleBar == null))
                {
                    this.mUIDocumentViewerStatemTitleBar = new UIDocumentViewerStatemTitleBar(this);
                }
                return this.mUIDocumentViewerStatemTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentViewerStatemTitleBar mUIDocumentViewerStatemTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerStatemTitleBar : WinTitleBar
    {
        
        public UIDocumentViewerStatemTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Document Viewer: Statement of Fact (Unknown)");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Document Viewer: Statement of Fact (Unknown)");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerCarInsWindow : WinWindow
    {
        
        public UIDocumentViewerCarInsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Document Viewer: Car Insurance IPID (Unknown)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Document Viewer: Car Insurance IPID (Unknown)");
            #endregion
        }
        
        #region Properties
        public UIDocumentViewerCarInsTitleBar UIDocumentViewerCarInsTitleBar
        {
            get
            {
                if ((this.mUIDocumentViewerCarInsTitleBar == null))
                {
                    this.mUIDocumentViewerCarInsTitleBar = new UIDocumentViewerCarInsTitleBar(this);
                }
                return this.mUIDocumentViewerCarInsTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentViewerCarInsTitleBar mUIDocumentViewerCarInsTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerCarInsTitleBar : WinTitleBar
    {
        
        public UIDocumentViewerCarInsTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Document Viewer: Car Insurance IPID (Unknown)");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Document Viewer: Car Insurance IPID (Unknown)");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerCertifWindow : WinWindow
    {
        
        public UIDocumentViewerCertifWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Document Viewer: Certificate of Motor Insurance (Unknown)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Document Viewer: Certificate of Motor Insurance (Unknown)");
            #endregion
        }
        
        #region Properties
        public UIDocumentViewerCertifTitleBar UIDocumentViewerCertifTitleBar
        {
            get
            {
                if ((this.mUIDocumentViewerCertifTitleBar == null))
                {
                    this.mUIDocumentViewerCertifTitleBar = new UIDocumentViewerCertifTitleBar(this);
                }
                return this.mUIDocumentViewerCertifTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentViewerCertifTitleBar mUIDocumentViewerCertifTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerCertifTitleBar : WinTitleBar
    {
        
        public UIDocumentViewerCertifTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Document Viewer: Certificate of Motor Insurance (Unknown)");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Document Viewer: Certificate of Motor Insurance (Unknown)");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerAboutOWindow : WinWindow
    {
        
        public UIDocumentViewerAboutOWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Document Viewer: About Our Insurance Services (Unknown)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Document Viewer: About Our Insurance Services (Unknown)");
            #endregion
        }
        
        #region Properties
        public UIDocumentViewerAboutOTitleBar UIDocumentViewerAboutOTitleBar
        {
            get
            {
                if ((this.mUIDocumentViewerAboutOTitleBar == null))
                {
                    this.mUIDocumentViewerAboutOTitleBar = new UIDocumentViewerAboutOTitleBar(this);
                }
                return this.mUIDocumentViewerAboutOTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentViewerAboutOTitleBar mUIDocumentViewerAboutOTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerAboutOTitleBar : WinTitleBar
    {
        
        public UIDocumentViewerAboutOTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Document Viewer: About Our Insurance Services (Unknown)");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Document Viewer: About Our Insurance Services (Unknown)");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerScheduWindow : WinWindow
    {
        
        public UIDocumentViewerScheduWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Document Viewer: Schedule (Unknown)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Document Viewer: Schedule (Unknown)");
            #endregion
        }
        
        #region Properties
        public UIDocumentViewerScheduTitleBar UIDocumentViewerScheduTitleBar
        {
            get
            {
                if ((this.mUIDocumentViewerScheduTitleBar == null))
                {
                    this.mUIDocumentViewerScheduTitleBar = new UIDocumentViewerScheduTitleBar(this);
                }
                return this.mUIDocumentViewerScheduTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentViewerScheduTitleBar mUIDocumentViewerScheduTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerScheduTitleBar : WinTitleBar
    {
        
        public UIDocumentViewerScheduTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Document Viewer: Schedule (Unknown)");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Document Viewer: Schedule (Unknown)");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerCoverLWindow : WinWindow
    {
        
        public UIDocumentViewerCoverLWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Document Viewer: Cover Letter (Unknown)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Document Viewer: Cover Letter (Unknown)");
            #endregion
        }
        
        #region Properties
        public UIDocumentViewerCoverLTitleBar UIDocumentViewerCoverLTitleBar
        {
            get
            {
                if ((this.mUIDocumentViewerCoverLTitleBar == null))
                {
                    this.mUIDocumentViewerCoverLTitleBar = new UIDocumentViewerCoverLTitleBar(this);
                }
                return this.mUIDocumentViewerCoverLTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentViewerCoverLTitleBar mUIDocumentViewerCoverLTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentViewerCoverLTitleBar : WinTitleBar
    {
        
        public UIDocumentViewerCoverLTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Document Viewer: Cover Letter (Unknown)");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Document Viewer: Cover Letter (Unknown)");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICILandscapeWindow1 : WinWindow
    {
        
        public UICILandscapeWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "CI Landscape";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("CI Landscape");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("CI Landscape");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("CI Landscape");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
}
